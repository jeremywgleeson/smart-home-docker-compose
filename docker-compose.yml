version: '3'
services:
  # Smart home services
  esphome:
    container_name: esphome
    image: esphome/esphome
    volumes:
      - ./esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    # ports:
    #   - 6052:6052
    expose:
      - 6052
    networks:
      - homeassistant-net
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/config:/config
      - ./certbot/conf:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
      - /var/run/dbus:/var/run/dbus:ro
      - /dev/serial:/dev/serial:ro
      - /dev/bus:/dev/bus:ro
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
    depends_on:
      - mosquitto
    restart: unless-stopped
    privileged: true
    ports:
      - 51828:51828 # homekit
      - 51829:51829 # homekit
    expose:
      - 8123
    networks:
      - homeassistant-net
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto:/mosquitto
    ports:
      - 1883:1883
    networks:
      - homeassistant-net
  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    restart: unless-stopped
    # ports: 
    #   - 1880:1880
    expose:
      - 1880
    volumes:
      - ./nodered/data:/data
    networks:
      - homeassistant-net
  
  # Infrastructure services
  mdns-reflector:
    image: flungo/avahi
    container_name: mdns-reflector
    restart: unless-stopped
    environment:
      - REFLECTOR_ENABLE_REFLECTOR=yes
    networks:
      homeassistant-net:
      external-net:
        ipv4_address: 10.0.0.199
  certbot:
    image: certbot/dns-cloudflare:latest
    container_name: certbot
    entrypoint: "/bin/sh -c \"trap exit TERM; while :; do certbot renew --post-hook 'chmod -R 755 /etc/letsencrypt/live /etc/letsencrypt/archive && chmod 644 /etc/letsencrypt/archive/jeremygleeson.com/privkey*.pem'; sleep 12h & wait $${!}; done;\""
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/lib-letsencrypt:/var/lib/letsencrypt:rw
      - ./.secrets/certbot:/secrets/certbot:ro
  cloudflare-ddns:
    image: "oznu/cloudflare-ddns:latest"
    container_name: cloudflare-ddns
    restart: unless-stopped
    environment:
      - API_KEY=$CLOUDFLARE_DNS_TOKEN
      - ZONE=jeremygleeson.com
      - SUBDOMAIN=homeassistant
      - DNS_SERVER=pihole
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      homeassistant-net:
      infrastructure-net:
    depends_on:
      - certbot
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "19659:80/tcp"
    expose:
      - 80
    environment:
      - TZ=America/Pacific
      - WEBPASSWORD=$PIHOLE_WEB_PASSWORD
    volumes:
      - './pihole/config:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    networks:
      infrastructure-net:
        ipv4_address: 10.2.0.100
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    # ports:
    #   - 9000:9000/tcp
    expose:
      - 9000
    environment:
      - TZ=America/Pacific
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/config:/data
    networks:
      infrastructure-net:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Pacific
      - SERVERURL=jeremygleeson.com
      - PEERS=jeremyiPhone,jeremyMacbook
      - PEERDNS=10.2.0.100
    volumes:
      - ./wireguard/config:/config
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      infrastructure-net:
    
  # NOTE: sample cloudflare tunnel config (if you're behind CGNAT)
  # cloudflared:
  #   container_name: cloudflared
  #   image: "cloudflare/cloudflared:latest"
  #   restart: unless-stopped
  #   command: tunnel run
  #   environment:
  #     - TUNNEL_TOKEN=$CLOUDFLARE_TUNNEL_TOKEN
  #   networks:
  #     infrastructure-net:

networks:
  infrastructure-net:
    name: infrastructure-net
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24
  external-net:
    name: external-net
    driver: macvlan
    driver_opts:
      parent: enp3s0
    ipam:
      config:
        - subnet: 10.0.0.0/22
          gateway: 10.0.0.1
  homeassistant-net:
    name: homeassistant-net
    ipam:
      driver: default
      config:
        - subnet: 172.20.2.0/24
          gateway: 172.20.2.1